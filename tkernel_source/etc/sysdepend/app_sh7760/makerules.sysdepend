#
# ----------------------------------------------------------------------
#     T-Kernel
#
#     Copyright (C) 2004-2008 by Ken Sakamura. All rights reserved.
#     T-Kernel is distributed under the T-License.
# ----------------------------------------------------------------------
#
#     Version:   1.02.04
#     Released by T-Engine Forum(http://www.t-engine.org) at 2008/02/29.
#
# ----------------------------------------------------------------------
#
#     Modified by T.Yokobayashi at 2015/12/28.
#
# ----------------------------------------------------------------------
#

#
#	@(#)makerules.sysdepend (SH7760) 2016/08/19
#		for GNU make
#
#	default rules - system-dependent (SH7760)
#
#	MACHINE	target CPU
#		sh7760	: SH7760(SH-4)
#
#	TETYPE	target T-Engine type
#		std	: standard T-Engine
#		app	: T-Engine Appliance Borad
#
#	GNUsh	GNU development tool for SH
#
#	_GNU_CONFIG   GNU compiler prefix
#

# check environmental variables
ifndef GNU_BD
  $(error 'GNU_BD' is not defined)
endif
ifndef GNUsh
  ifndef GNUSH
    $(error 'GNUsh' is not defined)
  endif
  # for compatibitily
  GNUsh = $(GNUSH)
endif
ifndef _GNU_CONFIG
  $(error '_GNU_CONFIG' is not defined)
endif

# command path
PATH = .
ifneq ($(filter "$(origin GNUsh)", $(TOOL_ORIGIN)), )
  PATH := $(PATH):$(GNUsh)/bin
endif
ifneq ($(filter "$(origin GNUs)", $(TOOL_ORIGIN)), )
  PATH := $(PATH):$(GNUs)/bin
endif
ifneq ($(filter Linux-%, $(CROSS_ARCH)), )
  PATH := $(PATH):/usr/local/bin:/bin:/usr/bin
endif
ifneq ($(filter Cygwin-%, $(CROSS_ARCH)), )
  PATH := $(PATH):/usr/local/bin:/bin:/usr/bin
endif
ifneq ($(filter mingw32-%, $(CROSS_ARCH)), )
  PATH := $(PATH):/mingw32/bin:/usr/bin
endif

# ----- Renesas SH7760 Appliance Board (SH7760,SH-4) ----------------------------

# GCC environment
TARGET_ARCH =

# target type
##_CPUTYPE_FLAGS = -m4 -mno-implicit-fp
_CPUTYPE_FLAGS = -m4-nofpu -ml
_TE_SYSTEM_NAME_ = _APP_SH7760_

### build option ###
CFLAGS +=
CPPFLAGS +=
ASFLAGS +=
LDFLAGS +=

### C ###
CC := $(BD)/etc/gccsh
OUTPUT_OPTION = -o $@
ifeq ($(mode), debug)
  CFLAGS += -g
  CPPFLAGS += $(HEADER:%=-I%) -D$(_TE_SYSTEM_NAME_) -DDEBUG
else
  CFLAGS += -O2
  CPPFLAGS += $(HEADER:%=-I%) -D$(_TE_SYSTEM_NAME_)
endif

CFLAGS += $(_CPUTYPE_FLAGS) -ffreestanding

CFLAGS_WARNING	    = -Wall
CFLAGS_WARNING_FULL = -pedantic -W -Wall

COMPILE.c = $(CC) $(TARGET_ARCH) $(CFLAGS) $(CPPFLAGS) -c
LINK.c = $(CC) $(TARGET_ARCH) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS)

%.o: %.c
	$(COMPILE.c) $< $(OUTPUT_OPTION)

%.uo: %.c
	$(COMPILE.c) $< $(OUTPUT_OPTION) -MT $@

%.s: %.c
	$(CC) $(TARGET_ARCH) $(CFLAGS) $(CPPFLAGS) -S $<

%.i: %.c
	$(CC) $(TARGET_ARCH) $(CFLAGS) $(CPPFLAGS) -E $< $(OUTPUT_OPTION)

### C++ ###
CXX := $(BD)/etc/gccsh
CXXFLAGS = $(CFLAGS)

COMPILE.cc = $(CXX) $(TARGET_ARCH) $(CXXFLAGS) $(CPPFLAGS) -c
LINK.cc = $(CXX) $(TARGET_ARCH) $(CXXFLAGS) $(CPPFLAGS) $(LDFLAGS)

%.o: %.cc
	$(COMPILE.cc) $< $(OUTPUT_OPTION)

%.uo: %.cc
	$(COMPILE.cc) $< $(OUTPUT_OPTION) -MT $@

%.s: %.cc
	$(CXX) $(TARGET_ARCH) $(CXXFLAGS) $(CPPFLAGS) -S $<

%.i: %.cc
	$(CXX) $(TARGET_ARCH) $(CXXFLAGS) $(CPPFLAGS) -E $< $(OUTPUT_OPTION)

### asm ###
AS = $(GNUsh)/bin/as
ifeq ($(mode), debug)
  ASFLAGS += -g
else
  ASFLAGS +=
endif

ASFLAGS += $(_CPUTYPE_FLAGS)
ASFLAGS.s = $(_CPUTYPE_FLAGS_AS) -little

COMPILE.S = $(CC) $(TARGET_ARCH) $(ASFLAGS) $(CPPFLAGS) -c
COMPILE.s = $(AS) $(ASFLAGS.s)

%.o: %.S
	$(COMPILE.S) $< $(OUTPUT_OPTION)

%.uo: %.S
	$(COMPILE.S) $< $(OUTPUT_OPTION) -MT $@

%.o: %.s
	$(COMPILE.s) $< $(OUTPUT_OPTION)

%.uo: %.s
	$(COMPILE.S) $< $(OUTPUT_OPTION)

%.i: %.S
	$(CC) $(TARGET_ARCH) $(ASFLAGS) $(CPPFLAGS) -E $< $(OUTPUT_OPTION)

### linker ###
LD = $(GNUsh)/bin/ld
ifeq ($(mode), debug)
  LDFLAGS += $(LIBDIR:%=-L%)
else
  LDFLAGS += $(LIBDIR:%=-L%)
endif

LDFLAGS += $(_CPUTYPE_FLAGS)

LIBDIR = $(COMMONLIB)
LOADLIBES =
LDOBJS =
LDLIBS =

# additional linker option
ifneq ($(filter sl, $(options)), )
  LDFLAGS2 = -static
else
  # no effect
  LDFLAGS2 = -static
endif
LDFLAGS3 = -static -T $(COMMONLIB)/static.lnk
START_ADR =

# create executable
LINK.o = $(CC) $(TARGET_ARCH) $(LDFLAGS) $(LDFLAGS2) $(START_ADR)

# link objects
LINK_R.o = $(CC) $(TARGET_ARCH) $(LDFLAGS) -r -nostdlib

# link objects and libraries
LINK_A.o = $(CC) $(TARGET_ARCH) $(LDFLAGS) -r

# create executable (location only)
LOCATE.o = $(CC) $(TARGET_ARCH) $(LDFLAGS) -nostdlib $(LDFLAGS3) $(START_ADR)

%: %.o
	$(LINK.o) $(LDOBJS) $^ $(LOADLIBES) $(LDLIBS) $(OUTPUT_OPTION)

%.out: %.o
	$(LINK.o) $(LDOBJS) $^ $(LOADLIBES) $(LDLIBS) $(OUTPUT_OPTION)

%.abs: %.o
	$(LINK_A.o) $(LDOBJS) $^ $(LOADLIBES) $(LDLIBS) -o _$@
	$(LOCATE.o) _$@ $(OUTPUT_OPTION)
	$(RM) _$@

### library ###
AR = $(GNUsh)/bin/ar
ARFLAGS = rv
RANLIB = $(GNUsh)/bin/ranlib

(%): %
	$(AR) $(ARFLAGS) $@ $%

### create name list ###
NM = $(GNUsh)/bin/nm
NMFLAGS = -n

%.map: %
	$(NM) $(NMFLAGS) $< > $@

%.map: %.out
	$(NM) $(NMFLAGS) $< > $@

%.map: %.abs
	$(NM) $(NMFLAGS) $< > $@

%.map: %.dll
	$(NM) $(NMFLAGS) $< > $@

### data box ###
DBCPPFLAGS = -D$(_TE_SYSTEM_NAME_)
DB_CPP = $(CPP) -nostdinc -traditional -P $(DATABOX_HEADER:%=-I%) $(DBCPPFLAGS)
DB = $(ETCBIN)/databox
DBFLAGS =
DBSRCFLAGS = -s
DATABOX = $(DB) $(DBFLAGS)

%.dbx: %.d
	$(DB_CPP) $< $@.tmp
	$(DATABOX) $@.tmp $@
	$(RM) $@.tmp

%.fsn: %.f
	$(DB_CPP) $< $@.tmp
	$(DATABOX) -n $@.tmp $@
	$(RM) $@.tmp

%.c: %.d
	$(DB_CPP) $< $@.tmp
	$(DATABOX) -n $(DBSRCFLAGS) $@.tmp $@
	$(RM) $@.tmp

### other ###
ifndef CPP
  CPP = $(GNU_BD)/bin/$(_GNU_CONFIG)cpp
endif
STRIP = $(GNUsh)/bin/strip --strip-unneeded

OBJCOPY = $(GNU_BD)/bin/$(_GNU_CONFIG)objcopy
OUTPUT_SREC = -O srec --srec-forceS3 --srec-len 32


# ----------------------------------------------------------------------
#|History of "makerules.sysdepend"
#|================================
#|* 2015/11/19	V1.02.04の"etc/sysdepend/std_sh7760/"から、
#|  [app_sh7760]用にコピーし、
#|  ../tef_em1d/makerules.sysdepend を参考に修正
#|* 2015/11/25	_TE_SYSTEM_NAME_ = _STD_SH7760_ → _APP_SH7760_ に修正
#|* 2015/12/28	T2EXの[tef_em1d]用"makerules.sysdepend"を参考に修正
#|* 2016/03/16	MSYS2 の"mingw32"環境に対応したPATHを設定
#|* 2016/03/16	OBJCOPY,CPPのパスを｢_GNU_CONFIG｣変数を使った指定に変更
#|* 2016/03/16	"-m4 -mno-implicit-fp"→"-m4-nofpu"に変更
#|* 2016/08/19	gccshの所在を"$(BD)/etc/"に移動
#|* 2016/11/09	_CPUTYPE_FLAGSにﾘﾄﾙｴﾝﾃﾞｨｱﾝ"-ml"指定を追加
#|* 2016/11/30	｢_GNU_CONFIG｣のprefix指定は、最後の"-"まで含めるように変更
#|
