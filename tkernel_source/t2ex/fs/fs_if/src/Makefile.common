#
# ----------------------------------------------------------------------
#    T2EX Software Package
#
#    Copyright 2012 by Ken Sakamura.
#    This software is distributed under the latest version of T-License 2.x.
# ----------------------------------------------------------------------
#
#    Released by T-Engine Forum(http://www.t-engine.org/) at 2012/12/12.
#    Modified by T-Engine Forum at 2013/02/20.
#    Modified by TRON Forum(http://www.tron.org/) at 2015/06/04.
#
# ----------------------------------------------------------------------
#

#
# This software package is available for use, modification, 
# and redistribution in accordance with the terms of the attached 
# T-License 2.x.
# If you want to redistribute the source code, you need to attach 
# the T-License 2.x document.
# There's no obligation to publish the content, and no obligation 
# to disclose it to the TRON Forum if you have modified the 
# software package.
# You can also distribute the modified source code. In this case, 
# please register the modification to T-Kernel traceability service.
# People can know the history of modifications by the service, 
# and can be sure that the version you have inherited some 
# modification of a particular version or not.
#
#    http://trace.tron.org/tk/?lang=en
#    http://trace.tron.org/tk/?lang=ja
#
# As per the provisions of the T-License 2.x, TRON Forum ensures that 
# the portion of the software that is copyrighted by Ken Sakamura or 
# the TRON Forum does not infringe the copyrights of a third party.
# However, it does not make any warranty other than this.
# DISCLAIMER: TRON Forum and Ken Sakamura shall not be held
# responsible for any consequences or damages caused directly or
# indirectly by the use of this software package.
#
# The source codes in bsd_source.tar.gz in this software package are 
# derived from NetBSD or OpenBSD and not covered under T-License 2.x.
# They need to be changed or redistributed according to the 
# representation of each source header.
#

#
#	@(#)Makefile.common
#
#

#	T2EX file system function interface linbraries (libfs.a)
#
#	1. make source
#	2. make
#	3. make install

# source file dependencies (generated automatically)
DEPS = Dependencies
DEPENDENCIES_OUTPUT := $(DEPS)
DEPS_SRC = Dependencies_src

# ----------------------------------------------------------------------------

# target file
TARGET	= libfs.a

# source file path
S	= ../../src
IFSRC	= ../../svc/$(MACHINE)

VPATH 	= $(S) $(IFSRC)
HEADER := $(S) $(IFSRC) $(BD)/include/t2ex $(HEADER)

# auto generation header/source files
IFLIB	= t2ex/fs.h

# source files
SRC	= fs_creat.c fs_fcntl.c fs_ioctl.c fs_lseek.c fs_open.c
SRC	+= $(SRC_SVC)

# object files
OBJ	= $(addsuffix .o, $(basename $(notdir $(SRC))))

# compiler options
CFLAGS	+= $(CFLAGS_WARNING)
CFLAGS	+= -fomit-frame-pointer

# ----------------------------------------------------------------------------

.PHONY: all clean source clean_source install clean_install

ALL = $(TARGET)

all: $(ALL)

# ----------------------------------------------------------------------------

# generate source code dependencies and define SRC_SVC
#    (included here because $(SRC_SVC) is referred from $(LIBOBJ) as prerequisites)
$(DEPS_SRC): $(addprefix $(BD)/include/t2ex/, $(IFLIB))
	$(RM) $@
	for if_src in $(IFLIB) ; do \
	  $(BD)/etc/mkt2exsvc -deps $(MACHINE) $(BD)/include/t2ex/$$if_src >> $@ ;\
	done
-include $(DEPS_SRC)

# ----------------------------------------------------------------------------

clean:
	$(RM) $(OBJ) $(ALL) $(DEPS) $(DEPS_SRC)

install: $(addprefix $(LIB_INSTALLDIR)/, $(TARGET))

source: $(SRC_SVC)

clean_source:
	( cd $(IFSRC) ; $(RM) *.h )
	( cd $(IFSRC) ; $(RM) *.S )

clean_install:
	$(RM) $(addprefix $(LIB_INSTALLDIR)/, $(TARGET))

$(TARGET): $(OBJ)
	$(AR) $(ARFLAGS) $@ $?
  ifdef RANLIB
	$(RANLIB) $@
  endif

$(SRC_SVC): $(addprefix $(BD)/include/t2ex/, $(IFLIB))
	( cd $(IFSRC) ; \
	for if_src in $(IFLIB) ; do \
	  $(BD)/etc/mkt2exsvc $(MACHINE) $(BD)/include/t2ex/$$if_src ;\
	done )

# ----------------------------------------------------------------------------

# generate dependencies
ifdef DEPENDENCIES_OUTPUT
  $(DEPS): ; touch $(DEPS)
else
  $(DEPS): $(SRC) ; $(MAKEDEPS) $@ $?
endif
-include $(DEPS)
